This is the botique shadow page

The shadow Mapping:  
In Ambassador Edge Stack, you can enable shadowing for a given mapping by setting shadow: true in your Mapping.   
One copy proceeds as if the shadowing Mapping was not present: the request is handed onward per the service(s) defined   
by the non-shadow Mappings, and the reply from whichever service is picked is handed back to the client.  

The second copy is handed to the service defined by the Mapping with shadow set.   
Any reply from this service is ignored, rather than being handed back to the client.   
Only a single shadow per resource can be specified (i.e., you can't shadow the same resource to more than 1 additional destination).   
In this situation, Ambassador Edge Stack will indicate an error in the diagnostic service, and only one shadow will be used.   
If you need to implement this type of use case, you should shadow traffic to a multicast proxy (or equivalent).  

You can shadow multiple different services.  
During shadowing, the host header is modified such that -shadow is appended.  

Example
The following example may help illustrate how shadowing can be used.  
This first attribute sets up a basic mapping between the myservice Kubernetes service and the /myservice/ prefix, as expected.  





Production service mapping. For reference only.  

~~~
---
apiVersion: getambassador.io/v2  
kind: Mapping  
metadata:  
  name: frontend  
  namespace: boutique
spec:
  host: aes-labs.com
  prefix: /
  service: frontend.boutique
---  
~~~



Example Traffic Shadow mapping.  

~~~
---
apiVersion: getambassador.io/v2
kind:  Mapping
metadata:
  name:  myservice-shaddow
  namespace: boutique-shadow
spec:
  prefix: /                                   # Edit for proper prefix.
  host: aes-labs.com
  service: frontend-shadow.boutique.shadow   # Edit for proper service.
  shadow: true
  weight: 20                                  # Edit for proper weight.
---  
~~~
